{"version":3,"sources":["recipe.module.css","Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Recipe","title","calories","image","ingredients","digest","useState","show","setShow","handleClose","className","style","recipe","src","alt","Button","variant","onClick","Modal","onHide","backdrop","keyboard","Header","Title","Body","map","ingredient","text","Footer","label","App","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.637ce4f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\"};","import React, { useState } from \"react\";\nimport style from \"./recipe.module.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Recipe = ({ title, calories, image, ingredients, digest }) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div className={style.recipe}>\n      <h1>{title}</h1>\n      <img className={style.image} src={image} alt=\"\" />\n      <Button variant=\"primary\" onClick={handleShow}>\n        More details\n      </Button>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <list>\n              <b>Ingredients</b>{\" \"}\n              {ingredients.map((ingredient) => (\n                <li>{ingredient.text}</li>\n              ))}\n            </list>\n          </div>\n\n          <p>\n            {\" \"}\n            <b>Calories</b> {calories}\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\">Understood</Button>\n        </Modal.Footer>\n      </Modal>\n      <list>\n        <b>Ingredients</b>{\" \"}\n        {ingredients.map((ingredient) => (\n          <li>{ingredient.text}</li>\n        ))}\n      </list>\n      <list>\n        <b>Digest</b>{\" \"}\n        {digest.map((digest) => (\n          <li>{digest.label}</li>\n        ))}\n      </list>\n      <p>\n        {\" \"}\n        <b>Calories</b> {calories}\n      </p>\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\n\n/**/\n\nconst App = () => {\n  const APP_ID = \"edf0da85\";\n  const APP_KEY = \"f7ce8a0a2cff9447606274d9e264d277\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"Whiskey\");\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={search}\n          placeholder=\"Search\"\n          onChange={updateSearch}\n        />\n        <button className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map((recipe) => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            digest={recipe.recipe.digest}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}